//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeviantArt.Chat.Oberon.Plugins.ChartLyrics {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api.chartlyrics.com/", ConfigurationName="ChartLyrics.apiv1Soap")]
    public interface apiv1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.chartlyrics.com/SearchLyric", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        SearchLyricResult[] SearchLyric(string artist, string song);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.chartlyrics.com/SearchLyricText", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        SearchLyricResult[] SearchLyricText(string lyricText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://api.chartlyrics.com/GetLyric", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricResult GetLyric(int lyricId, string lyricCheckSum);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.chartlyrics.com/")]
    public partial class SearchLyricResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string lyricChecksumField;
        
        private int lyricIdField;
        
        private string songUrlField;
        
        private string artistUrlField;
        
        private string artistField;
        
        private string songField;
        
        private int songRankField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string LyricChecksum {
            get {
                return this.lyricChecksumField;
            }
            set {
                this.lyricChecksumField = value;
                this.RaisePropertyChanged("LyricChecksum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int LyricId {
            get {
                return this.lyricIdField;
            }
            set {
                this.lyricIdField = value;
                this.RaisePropertyChanged("LyricId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SongUrl {
            get {
                return this.songUrlField;
            }
            set {
                this.songUrlField = value;
                this.RaisePropertyChanged("SongUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ArtistUrl {
            get {
                return this.artistUrlField;
            }
            set {
                this.artistUrlField = value;
                this.RaisePropertyChanged("ArtistUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Artist {
            get {
                return this.artistField;
            }
            set {
                this.artistField = value;
                this.RaisePropertyChanged("Artist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Song {
            get {
                return this.songField;
            }
            set {
                this.songField = value;
                this.RaisePropertyChanged("Song");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int SongRank {
            get {
                return this.songRankField;
            }
            set {
                this.songRankField = value;
                this.RaisePropertyChanged("SongRank");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3082")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://api.chartlyrics.com/")]
    public partial class GetLyricResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string lyricSongField;
        
        private string lyricArtistField;
        
        private string lyricUrlField;
        
        private string lyricCovertArtUrlField;
        
        private int lyricRankField;
        
        private string lyricCorrectUrlField;
        
        private string lyricField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string LyricSong {
            get {
                return this.lyricSongField;
            }
            set {
                this.lyricSongField = value;
                this.RaisePropertyChanged("LyricSong");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LyricArtist {
            get {
                return this.lyricArtistField;
            }
            set {
                this.lyricArtistField = value;
                this.RaisePropertyChanged("LyricArtist");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LyricUrl {
            get {
                return this.lyricUrlField;
            }
            set {
                this.lyricUrlField = value;
                this.RaisePropertyChanged("LyricUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LyricCovertArtUrl {
            get {
                return this.lyricCovertArtUrlField;
            }
            set {
                this.lyricCovertArtUrlField = value;
                this.RaisePropertyChanged("LyricCovertArtUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int LyricRank {
            get {
                return this.lyricRankField;
            }
            set {
                this.lyricRankField = value;
                this.RaisePropertyChanged("LyricRank");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string LyricCorrectUrl {
            get {
                return this.lyricCorrectUrlField;
            }
            set {
                this.lyricCorrectUrlField = value;
                this.RaisePropertyChanged("LyricCorrectUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Lyric {
            get {
                return this.lyricField;
            }
            set {
                this.lyricField = value;
                this.RaisePropertyChanged("Lyric");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface apiv1SoapChannel : DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class apiv1SoapClient : System.ServiceModel.ClientBase<DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1Soap>, DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1Soap {
        
        public apiv1SoapClient() {
        }
        
        public apiv1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public apiv1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public apiv1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public apiv1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SearchLyricResult[] SearchLyric(string artist, string song) {
            return base.Channel.SearchLyric(artist, song);
        }
        
        public SearchLyricResult[] SearchLyricText(string lyricText) {
            return base.Channel.SearchLyricText(lyricText);
        }
        
        public DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricResult GetLyric(int lyricId, string lyricCheckSum) {
            return base.Channel.GetLyric(lyricId, lyricCheckSum);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api.chartlyrics.com/", ConfigurationName="ChartLyrics.apiv1HttpGet")]
    public interface apiv1HttpGet {
        
        // CODEGEN: Generating message contract since the operation SearchLyric is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.chartlyrics.com/apiv1HttpGet/SearchLyricRequest", ReplyAction="http://api.chartlyrics.com/apiv1HttpGet/SearchLyricResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricResponse SearchLyric(DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricRequest request);
        
        // CODEGEN: Generating message contract since the operation SearchLyricText is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.chartlyrics.com/apiv1HttpGet/SearchLyricTextRequest", ReplyAction="http://api.chartlyrics.com/apiv1HttpGet/SearchLyricTextResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricTextResponse SearchLyricText(DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricTextRequest request);
        
        // CODEGEN: Generating message contract since the operation GetLyric is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://api.chartlyrics.com/apiv1HttpGet/GetLyricRequest", ReplyAction="http://api.chartlyrics.com/apiv1HttpGet/GetLyricResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricResponse GetLyric(DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchLyricRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string artist;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string song;
        
        public SearchLyricRequest() {
        }
        
        public SearchLyricRequest(string artist, string song) {
            this.artist = artist;
            this.song = song;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchLyricResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.chartlyrics.com/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SearchLyricResult[] ArrayOfSearchLyricResult;
        
        public SearchLyricResponse() {
        }
        
        public SearchLyricResponse(SearchLyricResult[] ArrayOfSearchLyricResult) {
            this.ArrayOfSearchLyricResult = ArrayOfSearchLyricResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchLyricTextRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string lyricText;
        
        public SearchLyricTextRequest() {
        }
        
        public SearchLyricTextRequest(string lyricText) {
            this.lyricText = lyricText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SearchLyricTextResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.chartlyrics.com/", Order=0)]
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public SearchLyricResult[] ArrayOfSearchLyricResult;
        
        public SearchLyricTextResponse() {
        }
        
        public SearchLyricTextResponse(SearchLyricResult[] ArrayOfSearchLyricResult) {
            this.ArrayOfSearchLyricResult = ArrayOfSearchLyricResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLyricRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string lyricId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string lyricCheckSum;
        
        public GetLyricRequest() {
        }
        
        public GetLyricRequest(string lyricId, string lyricCheckSum) {
            this.lyricId = lyricId;
            this.lyricCheckSum = lyricCheckSum;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetLyricResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.chartlyrics.com/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricResult GetLyricResult;
        
        public GetLyricResponse() {
        }
        
        public GetLyricResponse(DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricResult GetLyricResult) {
            this.GetLyricResult = GetLyricResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface apiv1HttpGetChannel : DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1HttpGet, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class apiv1HttpGetClient : System.ServiceModel.ClientBase<DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1HttpGet>, DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1HttpGet {
        
        public apiv1HttpGetClient() {
        }
        
        public apiv1HttpGetClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public apiv1HttpGetClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public apiv1HttpGetClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public apiv1HttpGetClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricResponse DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1HttpGet.SearchLyric(DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricRequest request) {
            return base.Channel.SearchLyric(request);
        }
        
        public SearchLyricResult[] SearchLyric(string artist, string song) {
            DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricRequest inValue = new DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricRequest();
            inValue.artist = artist;
            inValue.song = song;
            DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricResponse retVal = ((DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1HttpGet)(this)).SearchLyric(inValue);
            return retVal.ArrayOfSearchLyricResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricTextResponse DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1HttpGet.SearchLyricText(DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricTextRequest request) {
            return base.Channel.SearchLyricText(request);
        }
        
        public SearchLyricResult[] SearchLyricText(string lyricText) {
            DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricTextRequest inValue = new DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricTextRequest();
            inValue.lyricText = lyricText;
            DeviantArt.Chat.Oberon.Plugins.ChartLyrics.SearchLyricTextResponse retVal = ((DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1HttpGet)(this)).SearchLyricText(inValue);
            return retVal.ArrayOfSearchLyricResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricResponse DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1HttpGet.GetLyric(DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricRequest request) {
            return base.Channel.GetLyric(request);
        }
        
        public DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricResult GetLyric(string lyricId, string lyricCheckSum) {
            DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricRequest inValue = new DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricRequest();
            inValue.lyricId = lyricId;
            inValue.lyricCheckSum = lyricCheckSum;
            DeviantArt.Chat.Oberon.Plugins.ChartLyrics.GetLyricResponse retVal = ((DeviantArt.Chat.Oberon.Plugins.ChartLyrics.apiv1HttpGet)(this)).GetLyric(inValue);
            return retVal.GetLyricResult;
        }
    }
}
